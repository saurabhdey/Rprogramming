

combo <-read.table("P:/Rprojects/SRv1.txt", header=TRUE,
             fill=TRUE,sep="\t",colClasses=c("character","character","character","character",
            "numeric","character","numeric","numeric","numeric","numeric","numeric","numeric","factor"))


# Split data into test and training randomly
library(caret)
set.seed(825)
inTraining <- createDataPartition(combo$SS, p = 0.70, list = FALSE)
trainset <- combo[inTraining,]  
testset <- combo[-inTraining,]

#===========================================Logit============================================
#logitmod1 = glm(SS~as.factor(Agecategory)+as.factor(Gender)+as.factor(State),data=trainset,family=binomial("logit"))
#logitmod1 = glm(SS~Age+as.factor(Gender)+as.factor(State)+Proposed.Client.Face.Amt,data=trainset,family=binomial("logit"))
#logitest = predict(logitmod1,newdata = testset) 
#contab = table('   Pred' = logitest>0.5,'    Smoker' = testset$SS[])
#contab = table('   Pred' = (logitmod1)>0.5,'    Smoker' = trainset$SS[complete.cases(trainset)])
#===========================================Logit============================================


#===========================================GBM============================================

fitControl <- trainControl(
  method = "repeatedcv",
  number = 10,
## repeated ten times
  repeats = 10)

set.seed(825)

gbmFit <- train(SS~Age+State+Gender+lnPCFA+PCI+HouseValue,data=trainset,
                 trControl = fitControl,method = "gbm",
## This last option is actually one for gbm() that passes through
                 verbose = FALSE)


#===========================================SVM============================================

#fitControlsv <- trainControl(
#      method = "repeatedcv",
#      number = 10,
##    repeated ten times
#      repeats = 10,
#      classProbs = TRUE)

#set.seed(825)
#svmFit <- train(SS~AgeD+Gender+State, data = trainset,
#                method = "svmRadial",
#                trControl = fitControlsv,
#                preProc = c("center", "scale"),
#                tuneLength = 10,
#                metric = "ROC")

#svmFit1 <- train(SS~ Age + Gender+Proposed.Client.Face.Amt, data = trainset,
#                method = "svmRadial",
#                trControl = fitControlsv,
#                preProc = c("center", "scale"),
#                tuneLength = 8,
#                metric = "ROC")
#svmFit1

#svpred <- predict(svmFit1, testset$SS)
#confusionMatrix(svpred,testset$SS)

#===========================================SVM============================================

#===========================================RF============================================

#fitControlrf <- trainControl(method="oob")
#      method = "repeatedcv",
#      number = 10,
##     repeated ten times
#      repeats = 10,
#      classProbs = TRUE)

#set.seed(825)
#rforest <- train(SS~State+Gender+AgeD+LPCI+Taxrate,data = trainset,
#                 method = "rf",
#                 trControl = fitControlrf)

#===========================================RF============================================

#===========================================BST-DT============================================
#fitControlada <- trainControl(## 10-fold CV
#        method = "repeatedcv",
#        number = 10,
####### repeated ten times
#        repeats = 10,
#        classProbs = TRUE)

#adafit <- train(SS~Age+Gender+State+LnPCFA, data = trainset,
#                method = "ada",
#                trControl = fitControlada)

#==============================================================================
